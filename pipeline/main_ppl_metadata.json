{
	"name": "main_ppl_metadata",
	"properties": {
		"activities": [
			{
				"name": "Creata Metadata Table",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Set Table Name Of Metadata Table",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set Table Name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_asql_metadataui",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": {
								"value": "DROP TABLE IF EXISTS [dbo].[@{variables('tableName')}];\n\nCREATE TABLE [dbo].[@{variables('tableName')}](\n    [export] varchar(5),\n    [import] varchar(5),\n    [entity_display_name] VARCHAR(50) NOT NULL,\n    [entity_logical_name] VARCHAR(50) NOT NULL,\n    [logical_name] VARCHAR(50) NOT NULL,\n    [schema_name] VARCHAR(50) NOT NULL,\n    [display_name] VARCHAR(100),\n    [attribute_type] VARCHAR(20) NOT NULL,\n    [description] VARCHAR(1000),\n    [custom_attribute] VARCHAR(5) NOT NULL,\n    [type] VARCHAR(10),\n    [additional_data] VARCHAR(1000)\n)\n",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Set Table Name Of Metadata Table",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "tableName",
					"value": "crmipk_p"
				}
			},
			{
				"name": "Ingest Excel Data To SQL Table",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Creata Metadata Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBatchTimeout": "0.00:00:00",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Export"
								},
								"sink": {
									"name": "export",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Import"
								},
								"sink": {
									"name": "import",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Entity Display Name"
								},
								"sink": {
									"name": "entity_display_name",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Entity Logical Name"
								},
								"sink": {
									"name": "entity_logical_name",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Logical Name"
								},
								"sink": {
									"name": "logical_name",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Schema Name"
								},
								"sink": {
									"name": "schema_name",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Display Name"
								},
								"sink": {
									"name": "display_name",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Attribute Type"
								},
								"sink": {
									"name": "attribute_type",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Description"
								},
								"sink": {
									"name": "description",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Custom Attribute"
								},
								"sink": {
									"name": "custom_attribute",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Type"
								},
								"sink": {
									"name": "type",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Additional data"
								},
								"sink": {
									"name": "additional_data",
									"physicalType": "varchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "metadata_crmikpk_p",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_asql_metadata_crmipk_p",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Set Table Name",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "columnName",
					"value": "account"
				}
			},
			{
				"name": "Create account Table",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Ingest Excel Data To SQL Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_asql_metadataui",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": {
								"value": "DROP TABLE IF EXISTS account;\n\nDECLARE @entity_logical_name VARCHAR(50), @logical_name VARCHAR(50)\nDECLARE @sql VARCHAR(MAX)\n\nDECLARE myCursor CURSOR FOR \nSELECT entity_logical_name, logical_name FROM crmipk_p\nWHERE entity_logical_name = '@{variables('columnName')}'\n\nOPEN myCursor\nFETCH NEXT FROM myCursor INTO @entity_logical_name, @logical_name \n\n-- Create table with entity_logical_name as table name\nSET @sql = 'CREATE TABLE ' + QUOTENAME(@entity_logical_name) + '('\nWHILE @@FETCH_STATUS = 0\nBEGIN\n  -- Add logical_name as a column to the table\n  SET @sql = @sql + QUOTENAME(@logical_name) + ' VARCHAR(50), '\n  \n  FETCH NEXT FROM myCursor INTO @entity_logical_name , @logical_name \nEND\n-- Remove the trailing comma and close the parentheses\nSET @sql = LEFT(@sql, LEN(@sql) - 1) + ')'\nEXEC (@sql)\n\nCLOSE myCursor\nDEALLOCATE myCursor",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Kleiner Buffer",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "Create account Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 3
				}
			},
			{
				"name": "Create Tables Via Metadata Table",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Kleiner Buffer",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_asql_metadataui",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "DROP TABLE IF EXISTS crmikpk_entity_names;\n\nSELECT DISTINCT(entity_logical_name)\nINTO dbo.crmikpk_entity_names\nFROM crmipk_p\nORDER BY entity_logical_name ASC;\n\nDROP TABLE IF EXISTS crmikpk_attribute_names;\n\nSELECT DISTINCT(logical_name)\nINTO dbo.crmikpk_attribute_names\nFROM crmipk_p\nORDER BY logical_name ASC;\n\nDECLARE @entity_logical_name_drop VARCHAR(50)\nDECLARE @sql_drop NVARCHAR(MAX)\nDECLARE entity_cursor_drop CURSOR FOR\n    SELECT entity_logical_name FROM crmikpk_entity_names\nOPEN entity_cursor_drop\nFETCH NEXT FROM entity_cursor_drop INTO @entity_logical_name_drop\n\nWHILE @@FETCH_STATUS = 0\nBEGIN\n    SET @sql_drop = 'DROP TABLE IF EXISTS ' + QUOTENAME(@entity_logical_name_drop)\n    EXEC sp_executesql @sql_drop\n\n    FETCH NEXT FROM entity_cursor_drop INTO @entity_logical_name_drop\nEND\nCLOSE entity_cursor_drop\nDEALLOCATE entity_cursor_drop;\n\nDECLARE @entity_logical_name VARCHAR(50), @logical_name VARCHAR(50)\nDECLARE @sql VARCHAR(MAX)\n\nDECLARE entity_cursor CURSOR FOR \nSELECT DISTINCT entity_logical_name FROM crmipk_p\n\nOPEN entity_cursor\nFETCH NEXT FROM entity_cursor INTO @entity_logical_name\n\nWHILE @@FETCH_STATUS = 0\nBEGIN\n  DECLARE attribute_cursor CURSOR FOR \n  SELECT logical_name FROM crmipk_p\n  WHERE entity_logical_name = @entity_logical_name\n\n  SET @sql = 'CREATE TABLE ' + QUOTENAME(@entity_logical_name) + '('\n\n  OPEN attribute_cursor\n  FETCH NEXT FROM attribute_cursor INTO @logical_name \n\n  WHILE @@FETCH_STATUS = 0\n  BEGIN\n\n    SET @sql = @sql + QUOTENAME(@logical_name) + ' VARCHAR(50), '\n\n    FETCH NEXT FROM attribute_cursor INTO @logical_name \n  END\n\n  CLOSE attribute_cursor\n  DEALLOCATE attribute_cursor\n\n  SET @sql = LEFT(@sql, LEN(@sql) - 1) + ')'\n  EXEC (@sql)\n\n  FETCH NEXT FROM entity_cursor INTO @entity_logical_name\nEND\n\nCLOSE entity_cursor\nDEALLOCATE entity_cursor;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"variables": {
			"tableName": {
				"type": "String"
			},
			"columnName": {
				"type": "String"
			}
		},
		"annotations": []
	}
}
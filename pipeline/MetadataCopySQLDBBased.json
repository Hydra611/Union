{
	"name": "MetadataCopySQLDBBased",
	"properties": {
		"activities": [
			{
				"name": "Get Tables and Queries",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Truncate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "SELECT \n    SchemaName,\n    TableName,\n    'select ' + STRING_AGG('[' + ColumnName+ ']', ', ') + ' FROM [' + SchemaName + '].[' + TableName + ']' AS TableSQL\nFROM [UiConfig].[TablesColumns]\nAS [result]\nGROUP BY [SchemaName], [TableName]"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Loop Over Tables and Columns",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Set Tables and Queries",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('v_conf')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Test Copy Data",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set key column",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "@{item().SchemaName}.@{item().TableName}"
								},
								{
									"name": "Destination",
									"value": "@{'UiLoad'}.@{item().TableName}"
								}
							],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@item().TableSQL",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "upsert",
									"upsertSettings": {
										"useTempDB": true,
										"keys": {
											"value": "@variables('v_key')",
											"type": "Expression"
										}
									},
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"validateDataConsistency": true,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Stage_Table",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"SchemaName": {
											"value": "@item().SchemaName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Load_Table",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"SchemaName": "UiLoad"
									}
								}
							]
						},
						{
							"name": "UpperCase",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Test Copy Data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "NonQuery",
										"text": {
											"value": "UPDATE [UiStaging].@{item().TableName}\nSET UpperCase = upper(Name)",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Transform",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "UpperCase",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "NonQuery",
										"text": {
											"value": "INSERT INTO UiLoad.Names_ALL (Name, Age)\nSELECT upper(Name) AS Name,\n    Age\nFROM UiLoad.@{item().Tablename};",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Set key column",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "v_key",
								"value": [
									"Name"
								]
							}
						}
					]
				}
			},
			{
				"name": "Set Tables and Queries",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Tables and Queries",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_conf",
					"value": {
						"value": "@activity('Get Tables and Queries').output.resultSets[0].rows",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Truncate",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Function Test",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": {
								"value": "TRUNCATE TABLE UiLoad.Names_ALL;\n\nprint('successfull truncation')",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Function Test",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "CREATE FUNCTION dbo.add1(@x int)\nRETURNS int\nAS\nBEGIN\n  RETURN (SELECT @x * 4);\nEND\nGO\n\nSELECT dbo.add1(v.Value1), dbo.add1(v.Value2)\nFROM (VALUES(1,2),(3,4)) AS v(Value1, Value2);"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"variables": {
			"v_suffix": {
				"type": "Array"
			},
			"v_tablename": {
				"type": "String"
			},
			"v_conf": {
				"type": "Array"
			},
			"v_key": {
				"type": "Array"
			}
		},
		"annotations": []
	}
}